only do categorical stuff:
    for category in categories
        for value in category:
            data_subset[value] = [datum in data if datum.category = value]
        info_gain = calc_info_gain(data_subset)
        if info_gain is max:
            keep track of category

    for value in category:
        data_subset = [datum in data if datum.category = value]
        recursion on data_subset

node:
    attribute = (var_name, var_type)
    children = {var_value: node}
        or {left: node, right: node}

    result = 'res_string'

    def distribution(self, data):
        return distribution (as a histogram)

Now I need a way to predict continuous data.

try:
    predict age

try:
    use age,ticket, fare -> survival

try:
    random forest:
        each tree gets a different subset of data (with replacement!)
        at each step, each tree randomly compares only two of the N attributes to split on.
